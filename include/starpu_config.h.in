/* StarPU --- Runtime system for heterogeneous multicore architectures.
 *
 * Copyright (C) 2009-2015  Universit√© de Bordeaux
 * Copyright (C) 2010, 2011, 2012, 2013, 2015  Centre National de la Recherche Scientifique
 * Copyright (C) 2014  INRIA
 *
 * StarPU is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or (at
 * your option) any later version.
 *
 * StarPU is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * See the GNU Lesser General Public License in COPYING.LGPL for more details.
 */

/*
 * This is the public config.h file, installed along libstarpu.
 *
 * It should only contain the build-time #defines which have an effect on the
 * API & ABI.
 */

#ifndef __STARPU_CONFIG_PUBLIC_H__
#define __STARPU_CONFIG_PUBLIC_H__

#undef STARPU_MAJOR_VERSION
#undef STARPU_MINOR_VERSION
#undef STARPU_RELEASE_VERSION

#undef STARPU_USE_CPU
#undef STARPU_USE_CUDA
#undef STARPU_USE_OPENCL

#undef STARPU_SIMGRID
#undef STARPU_HAVE_SIMGRID_MSG_H
#undef STARPU_NON_BLOCKING_DRIVERS

#undef STARPU_HAVE_ICC

#undef STARPU_USE_MPI

#undef STARPU_ATLAS
#undef STARPU_GOTO
#undef STARPU_MKL
#undef STARPU_SYSTEM_BLAS

#undef STARPU_BUILD_DIR
#undef STARPU_OPENCL_DATADIR
#undef STARPU_HAVE_MAGMA

#undef STARPU_OPENGL_RENDER
#undef STARPU_USE_GTK
#undef STARPU_HAVE_X11

#undef STARPU_HAVE_POSIX_MEMALIGN

#undef STARPU_HAVE_MEMALIGN

#undef STARPU_HAVE_MALLOC_H

#undef STARPU_HAVE_SYNC_BOOL_COMPARE_AND_SWAP
#undef STARPU_HAVE_SYNC_FETCH_AND_ADD
#undef STARPU_HAVE_SYNC_FETCH_AND_OR
#undef STARPU_HAVE_SYNC_LOCK_TEST_AND_SET
#undef STARPU_HAVE_SYNC_SYNCHRONIZE

#undef STARPU_MODEL_DEBUG
#undef STARPU_NO_ASSERT

#undef STARPU_HAVE_FFTW
#undef STARPU_HAVE_FFTWF
#undef STARPU_HAVE_FFTWL

#undef STARPU_HAVE_CURAND

#undef STARPU_MAXNODES
#undef STARPU_NMAXBUFS
#undef STARPU_MAXCPUS
#undef STARPU_MAXCUDADEVS
#undef STARPU_MAXOPENCLDEVS
#undef STARPU_NMAXWORKERS
#undef STARPU_NMAX_SCHED_CTXS
#undef STARPU_MAXIMPLEMENTATIONS
#undef STARPU_USE_SC_HYPERVISOR
#undef STARPU_HAVE_GLPK_H

#undef STARPU_HAVE_LIBNUMA

#undef STARPU_HAVE_WINDOWS
#undef STARPU_HAVE_UNSETENV
#undef STARPU_HAVE_UNISTD_H

#ifdef _MSC_VER
typedef long starpu_ssize_t;
#define __starpu_func__ __FUNCTION__
#else
#  include <sys/types.h>
typedef ssize_t starpu_ssize_t;
#define __starpu_func__ __func__
#endif

#if defined(c_plusplus) || defined(__cplusplus)
/* inline is part of C++ */
#  define __starpu_inline inline
#elif defined(_MSC_VER) || defined(__HP_cc)
#  define __starpu_inline __inline
#else
#  define __starpu_inline __inline__
#endif

#undef STARPU_QUICK_CHECK
#undef STARPU_USE_DRAND48
#undef STARPU_USE_ERAND48_R
#undef STARPU_HAVE_NEARBYINTF
#undef STARPU_HAVE_RINTF
#undef STARPU_USE_TOP

#undef STARPU_HAVE_HWLOC
#undef STARPU_HAVE_PTHREAD_BARRIER
#undef STARPU_HAVE_STRUCT_TIMESPEC

/* This is only for building examples */
#undef STARPU_HAVE_HELGRIND_H

#endif
